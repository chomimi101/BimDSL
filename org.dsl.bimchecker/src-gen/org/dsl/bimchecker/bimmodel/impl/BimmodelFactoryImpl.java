/**
 * generated by Xtext 2.10.0
 */
package org.dsl.bimchecker.bimmodel.impl;

import org.dsl.bimchecker.bimmodel.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class BimmodelFactoryImpl extends EFactoryImpl implements BimmodelFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static BimmodelFactory init()
  {
    try
    {
      BimmodelFactory theBimmodelFactory = (BimmodelFactory)EPackage.Registry.INSTANCE.getEFactory(BimmodelPackage.eNS_URI);
      if (theBimmodelFactory != null)
      {
        return theBimmodelFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new BimmodelFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BimmodelFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case BimmodelPackage.BIMMODEL: return createBimmodel();
      case BimmodelPackage.RULE: return createRule();
      case BimmodelPackage.ALIASS: return createAliass();
      case BimmodelPackage.ANNOTATION: return createAnnotation();
      case BimmodelPackage.ANNOTATION_DETAIL: return createAnnotationDetail();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Bimmodel createBimmodel()
  {
    BimmodelImpl bimmodel = new BimmodelImpl();
    return bimmodel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Rule createRule()
  {
    RuleImpl rule = new RuleImpl();
    return rule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Aliass createAliass()
  {
    AliassImpl aliass = new AliassImpl();
    return aliass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Annotation createAnnotation()
  {
    AnnotationImpl annotation = new AnnotationImpl();
    return annotation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AnnotationDetail createAnnotationDetail()
  {
    AnnotationDetailImpl annotationDetail = new AnnotationDetailImpl();
    return annotationDetail;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BimmodelPackage getBimmodelPackage()
  {
    return (BimmodelPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static BimmodelPackage getPackage()
  {
    return BimmodelPackage.eINSTANCE;
  }

} //BimmodelFactoryImpl
